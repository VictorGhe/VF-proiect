python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta5_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:26:43     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:26:43     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:26:43     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:26:43     [Failed] RandomAttack(seed=802, device=cpu)
INFO     17:26:43     [Success] PGDAttack(seed=561, device=cpu)
INFO     17:26:43     [!] Iterations: 0
INFO     17:26:43     adv (first 5): tensor([-0.4077, -0.4164,  3.1419, -0.3912, -0.1966], dtype=torch.float64)
DEBUG    17:26:43     output: tensor([10.3970], dtype=torch.float64)
INFO     17:26:43     [!] Result: sat
INFO     17:26:43     [!] Runtime: 0.2119
sat,0.2119
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:26:43.612192458 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612279345 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612302323 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612322313 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612339505 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612356087 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612372508 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612388790 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612405922 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612422583 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612438875 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.612460175 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.617937776 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.617983673 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.617989790 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.617994757 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.617999615 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.618004193 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.618008890 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.618013208 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.618018026 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.618022583 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.618029350 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:43.618033698 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta10_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:26:46     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:26:46     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:26:46     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:26:46     [Failed] RandomAttack(seed=83, device=cpu)
INFO     17:26:46     [Success] PGDAttack(seed=508, device=cpu)
INFO     17:26:46     [!] Iterations: 0
INFO     17:26:46     adv (first 5): tensor([-0.4373,  0.2372, -0.5238, -0.4292,  0.4380], dtype=torch.float64)
DEBUG    17:26:46     output: tensor([499.0959], dtype=torch.float64)
INFO     17:26:46     [!] Result: sat
INFO     17:26:46     [!] Runtime: 0.2150
sat,0.2150
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:26:46.499588384 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499680408 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499701917 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499720768 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499739958 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499758289 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499781677 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499800588 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499819269 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499837999 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499855990 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.499874041 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504571476 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504628317 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504652135 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504669727 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504687008 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504703640 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504720251 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504736513 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504752905 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504769317 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504785819 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:46.504807198 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta20_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:26:49     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:26:49     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:26:49     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:26:49     [Failed] RandomAttack(seed=381, device=cpu)
INFO     17:26:50     [Failed] PGDAttack(seed=490, device=cpu)
INFO     17:26:50     [!] eps=0.289968, perturbed=4
DEBUG    17:26:50     Try conv_mode=patches, method=backward, input_split=False
INFO     17:26:50     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:26:50     Initial bounds (fisrt 10): tensor([ 560.1708, -560.9540])
INFO     17:26:50     Remain 0 objectives
INFO     17:26:50     [!] Iterations: 0
INFO     17:26:50     [!] Result: unsat
INFO     17:26:50     [!] Runtime: 0.8519
unsat,0.8519
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:26:49.413558141 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413648655 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413668076 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413687546 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413709735 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413730424 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413750754 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413776821 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413819510 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413854652 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413875962 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.413898331 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418323759 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418389676 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418410805 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418429676 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418454794 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418473454 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418492085 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418510456 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418528956 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418547267 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418565738 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:49.418584069 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta40_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:26:53     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:26:53     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:26:53     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:26:53     [Failed] RandomAttack(seed=848, device=cpu)
INFO     17:26:53     [Failed] PGDAttack(seed=860, device=cpu)
INFO     17:26:53     [!] eps=0.798700, perturbed=4
INFO     17:26:53     Params of 1-th run: {'input_split': True, 'abstract_method': 'forward+backward', 'decision_method': 'smart', 'decision_topk': 1}
DEBUG    17:26:53     Try conv_mode=patches, method=forward+backward, input_split=True
INFO     17:26:53     Initialized abstractor: mode="patches", method="forward+backward", input_split=True, backward_batch_size=inf
INFO     17:26:53     Try batch size 1000
INFO     17:26:53     Initial bounds (fisrt 10): tensor([ 597.5528, -597.8716])
INFO     17:26:54     Verified: 2 	 Remain: 0
INFO     17:26:54     [!] Iterations: 0
INFO     17:26:54     [!] Result: unsat
INFO     17:26:54     [!] Runtime: 0.9688
unsat,0.9688
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:26:53.044343263 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044463373 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044484943 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044504113 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044523034 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044541265 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044559885 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044578056 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044596887 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044615358 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044633558 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.044651849 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049681664 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049761014 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049781164 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049801444 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049824013 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049846152 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049864103 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049880504 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049903433 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049920584 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049937026 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:53.049953248 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta5_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:26:56     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:26:56     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:26:56     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:26:56     [Failed] RandomAttack(seed=616, device=cpu)
INFO     17:26:56     [Success] PGDAttack(seed=27, device=cpu)
INFO     17:26:56     [!] Iterations: 0
INFO     17:26:56     adv (first 5): tensor([ 3.2525, -0.4165, -0.4497, -0.4676, -0.2155], dtype=torch.float64)
DEBUG    17:26:56     output: tensor([154.4593], dtype=torch.float64)
INFO     17:26:56     [!] Result: sat
INFO     17:26:56     [!] Runtime: 0.2149
sat,0.2149
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:26:56.775632279 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775741834 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775761934 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775779456 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775796777 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775813339 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775830020 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775851679 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775868991 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775886012 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775902434 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.775918646 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782322344 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782415437 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782437256 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782456696 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782482064 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782501294 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782520265 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782539055 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782557926 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782576647 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782595477 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:56.782614158 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta10_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:26:59     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:26:59     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:26:59     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:26:59     [Failed] RandomAttack(seed=565, device=cpu)
INFO     17:27:00     [Failed] PGDAttack(seed=961, device=cpu)
INFO     17:27:00     [!] eps=0.126935, perturbed=8
DEBUG    17:27:00     Try conv_mode=patches, method=backward, input_split=False
INFO     17:27:00     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:27:00     Initial bounds (fisrt 10): tensor([ 66.2146, -66.8454])
INFO     17:27:00     Remain 0 objectives
INFO     17:27:00     [!] Iterations: 0
INFO     17:27:00     [!] Result: unsat
INFO     17:27:00     [!] Runtime: 0.8737
unsat,0.8737
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:26:59.862819271 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.862903089 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.862923249 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.862940580 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.862958161 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.862974903 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.862991495 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.863007997 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.863024758 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.863041230 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.863057622 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.863076512 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868226027 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868297821 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868318101 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868335722 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868353333 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868370345 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868387007 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868403668 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868420520 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868442389 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868459460 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:26:59.868476122 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta20_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:03     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:03     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:03     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:03     [Failed] RandomAttack(seed=542, device=cpu)
INFO     17:27:03     [Success] PGDAttack(seed=492, device=cpu)
INFO     17:27:03     [!] Iterations: 0
INFO     17:27:03     adv (first 5): tensor([-0.4373,  0.1626, -0.5245, -0.4295,  0.3494], dtype=torch.float64)
DEBUG    17:27:03     output: tensor([517.9363], dtype=torch.float64)
INFO     17:27:03     [!] Result: sat
INFO     17:27:03     [!] Runtime: 0.2228
sat,0.2228
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:03.543207636 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543312193 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543363958 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543384407 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543403708 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543422428 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543440849 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543459210 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543478071 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543506246 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543525157 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.543543498 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550067245 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550204896 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550233312 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550262087 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550298269 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550335021 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550385366 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550420558 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550457710 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550494321 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550528824 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:03.550568714 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta40_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:06     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:06     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:06     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:06     [Failed] RandomAttack(seed=903, device=cpu)
INFO     17:27:07     [Failed] PGDAttack(seed=43, device=cpu)
INFO     17:27:07     [!] eps=0.333250, perturbed=8
DEBUG    17:27:07     Try conv_mode=patches, method=backward, input_split=False
INFO     17:27:07     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:27:07     Initial bounds (fisrt 10): tensor([ 115.4837, -116.5975])
INFO     17:27:07     Remain 0 objectives
INFO     17:27:07     [!] Iterations: 0
INFO     17:27:07     [!] Result: unsat
INFO     17:27:07     [!] Runtime: 0.8701
unsat,0.8701
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:06.533004667 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533097111 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533117181 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533134312 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533151614 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533168235 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533184967 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533217631 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533245757 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533269575 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533287835 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.533304837 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537682057 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537738879 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537763986 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537781487 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537799278 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537819158 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537836420 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537853111 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537869993 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537886885 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537903746 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:06.537923536 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta5_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:10     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:10     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:10     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:10     [Failed] RandomAttack(seed=252, device=cpu)
INFO     17:27:10     [Failed] PGDAttack(seed=795, device=cpu)
INFO     17:27:10     [!] eps=0.043334, perturbed=16
DEBUG    17:27:10     Try conv_mode=patches, method=backward, input_split=False
INFO     17:27:10     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:27:11     Initial bounds (fisrt 10): tensor([ 354.6134, -355.1136])
INFO     17:27:11     Remain 0 objectives
INFO     17:27:11     [!] Iterations: 0
INFO     17:27:11     [!] Result: unsat
INFO     17:27:11     [!] Runtime: 0.8812
unsat,0.8812
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:10.131743454 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131829561 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131849152 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131866033 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131882725 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131898777 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131914899 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131931011 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131947512 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131963744 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.131979816 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.132000936 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137093920 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137119118 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137124235 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137128843 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137133471 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137137788 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137142346 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137146694 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137151432 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137155969 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137162816 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:10.137167174 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta10_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:13     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:13     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:13     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:13     [Failed] RandomAttack(seed=79, device=cpu)
INFO     17:27:14     [Failed] PGDAttack(seed=148, device=cpu)
INFO     17:27:14     [!] eps=0.125949, perturbed=16
DEBUG    17:27:14     Try conv_mode=patches, method=backward, input_split=False
INFO     17:27:14     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:27:14     Initial bounds (fisrt 10): tensor([ 547.0576, -549.1319])
INFO     17:27:14     Remain 0 objectives
INFO     17:27:14     [!] Iterations: 0
INFO     17:27:14     [!] Result: unsat
INFO     17:27:14     [!] Runtime: 0.8533
unsat,0.8533
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:13.816853656 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.816944441 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.816965660 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.816984141 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.817003141 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.817021232 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.817039413 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.817057504 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.817076235 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.817094326 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.817112507 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.817130598 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.821947300 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.821981453 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.821987690 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.821992258 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.821996856 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.822001293 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.822006051 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.822010399 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.822015107 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.822019554 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.822024422 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:13.822028780 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta20_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:17     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:17     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:17     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:17     [Failed] RandomAttack(seed=870, device=cpu)
INFO     17:27:17     [Success] PGDAttack(seed=250, device=cpu)
INFO     17:27:17     [!] Iterations: 0
INFO     17:27:17     adv (first 5): tensor([-0.4119,  3.4103, -0.3865, -0.4194,  2.3795], dtype=torch.float64)
DEBUG    17:27:17     output: tensor([64.9484], dtype=torch.float64)
INFO     17:27:17     [!] Result: sat
INFO     17:27:17     [!] Runtime: 0.2109
sat,0.2109
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:17.419561881 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419652425 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419672735 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419689937 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419706918 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419767478 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419808787 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419832396 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419850476 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419867428 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419884020 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.419900531 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424513379 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424570150 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424591950 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424611490 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424631380 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424650550 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424669681 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424688521 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424707742 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424726822 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424746083 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:17.424764693 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta40_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:20     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:20     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:20     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:20     [Failed] RandomAttack(seed=110, device=cpu)
INFO     17:27:20     [Success] PGDAttack(seed=956, device=cpu)
INFO     17:27:20     [!] Iterations: 0
INFO     17:27:20     adv (first 5): tensor([-0.4135, -0.4163, -0.5602,  3.2492, -0.4150], dtype=torch.float64)
DEBUG    17:27:20     output: tensor([38.9323], dtype=torch.float64)
INFO     17:27:20     [!] Result: sat
INFO     17:27:20     [!] Runtime: 0.2291
sat,0.2291
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:20.426869691 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.426967520 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.426988380 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.427006749 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.427025349 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.427043508 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.427061677 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.427079796 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.427098635 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.427116985 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.427135084 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.427153053 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432184707 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432301666 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432410861 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432437394 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432464347 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432483507 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432502536 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432521196 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432540285 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432558925 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432577964 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:20.432596413 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta5_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:23     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:23     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:23     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:23     [Failed] RandomAttack(seed=942, device=cpu)
INFO     17:27:24     [Failed] PGDAttack(seed=404, device=cpu)
INFO     17:27:24     [!] eps=0.080810, perturbed=32
DEBUG    17:27:24     Try conv_mode=patches, method=backward, input_split=False
INFO     17:27:24     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:27:24     Initial bounds (fisrt 10): tensor([ 208.5332, -208.9357])
INFO     17:27:24     Remain 0 objectives
INFO     17:27:24     [!] Iterations: 0
INFO     17:27:24     [!] Result: unsat
INFO     17:27:24     [!] Runtime: 0.8612
unsat,0.8612
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:23.439718151 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439812819 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439835140 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439854900 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439874720 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439893839 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439912899 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439931758 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439951248 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439970748 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.439990668 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.440009637 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445178164 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445216693 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445222846 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445227368 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445232161 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445236543 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445241025 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445245397 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445250040 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445254482 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445261665 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:23.445267759 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta10_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:27     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:27     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:27     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:27     [Failed] RandomAttack(seed=258, device=cpu)
INFO     17:27:27     [Failed] PGDAttack(seed=669, device=cpu)
INFO     17:27:27     [!] eps=0.307774, perturbed=32
DEBUG    17:27:27     Try conv_mode=patches, method=backward, input_split=False
INFO     17:27:27     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:27:27     Initial bounds (fisrt 10): tensor([ 394.1242, -397.6071])
INFO     17:27:27     Remain 0 objectives
INFO     17:27:27     [!] Iterations: 0
INFO     17:27:27     [!] Result: unsat
INFO     17:27:27     [!] Runtime: 0.9198
unsat,0.9198
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:27.034885706 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.034986767 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035012610 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035035991 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035054991 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035071609 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035088127 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035104366 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035124276 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035145246 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035162925 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.035182735 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039638523 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039696892 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039723535 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039743085 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039762665 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039781364 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039799894 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039818453 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039837222 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039855832 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039874681 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:27.039896852 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta20_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:30     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:30     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:30     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:30     [Failed] RandomAttack(seed=600, device=cpu)
INFO     17:27:31     [Failed] PGDAttack(seed=963, device=cpu)
INFO     17:27:31     [!] eps=1.148586, perturbed=32
INFO     17:27:31     Params of 1-th run: {'input_split': True, 'abstract_method': 'forward+backward', 'decision_method': 'smart', 'decision_topk': 1}
DEBUG    17:27:31     Try conv_mode=patches, method=forward+backward, input_split=True
INFO     17:27:31     Initialized abstractor: mode="patches", method="forward+backward", input_split=True, backward_batch_size=inf
INFO     17:27:31     Try batch size 1000
INFO     17:27:31     Initial bounds (fisrt 10): tensor([ 339.6100, -344.7761])
INFO     17:27:31     Verified: 2 	 Remain: 0
INFO     17:27:31     [!] Iterations: 0
INFO     17:27:31     [!] Result: unsat
INFO     17:27:31     [!] Runtime: 0.9418
unsat,0.9418
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:30.700175310 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700256609 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700276729 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700294050 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700319238 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700336059 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700352931 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700369653 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700386964 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700403815 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700420617 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.700437359 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705393612 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705486895 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705508914 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705528205 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705547925 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705566845 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705585836 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705604736 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705623977 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705646745 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705666106 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:30.705684906 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta40_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:34     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:34     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:34     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:34     [Failed] RandomAttack(seed=270, device=cpu)
INFO     17:27:35     [Failed] PGDAttack(seed=867, device=cpu)
INFO     17:27:35     [!] eps=0.767127, perturbed=32
INFO     17:27:35     Params of 1-th run: {'input_split': True, 'abstract_method': 'forward+backward', 'decision_method': 'smart', 'decision_topk': 1}
DEBUG    17:27:35     Try conv_mode=patches, method=forward+backward, input_split=True
INFO     17:27:35     Initialized abstractor: mode="patches", method="forward+backward", input_split=True, backward_batch_size=inf
INFO     17:27:35     Try batch size 1000
INFO     17:27:35     Initial bounds (fisrt 10): tensor([ 327.0807, -333.2813])
INFO     17:27:35     Verified: 2 	 Remain: 0
INFO     17:27:35     [!] Iterations: 0
INFO     17:27:35     [!] Result: unsat
INFO     17:27:35     [!] Runtime: 0.9700
unsat,0.9700
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:34.450642996 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450728953 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450751062 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450769912 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450788943 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450807474 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450826064 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450844685 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450863686 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450882486 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450906784 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.450926144 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456081606 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456103435 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456108472 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456113020 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456117588 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456121925 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456126393 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456130701 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456135249 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456139567 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456145454 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:34.456149991 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/monotonicity_CI_shift5_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:38     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:38     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:38     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:38     [Failed] RandomAttack(seed=312, device=cpu)
INFO     17:27:38     [Failed] PGDAttack(seed=665, device=cpu)
INFO     17:27:38     [!] eps=0.020840, perturbed=40
DEBUG    17:27:38     Try conv_mode=patches, method=backward, input_split=False
INFO     17:27:39     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:27:39     Initial bounds (fisrt 10): tensor([ 374.3772, -374.8843])
INFO     17:27:39     Remain 0 objectives
INFO     17:27:39     [!] Iterations: 0
INFO     17:27:39     [!] Result: unsat
INFO     17:27:39     [!] Runtime: 0.9106
unsat,0.9106
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:38.174283668 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174398900 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174420079 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174438550 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174457321 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174475552 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174493933 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174512183 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174531144 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174549765 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174568535 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.174586656 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180759900 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180849665 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180869995 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180886927 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180909825 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180926737 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180943209 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180959440 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180975912 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.180992374 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.181008576 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:38.181024578 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/monotonicity_CI_shift10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:41     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:41     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:41     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:41     [Failed] RandomAttack(seed=238, device=cpu)
INFO     17:27:42     [Success] PGDAttack(seed=814, device=cpu)
INFO     17:27:42     [!] Iterations: 0
INFO     17:27:42     adv (first 5): tensor([-0.4248, -0.3930, -0.5424,  0.6244, -0.8136], dtype=torch.float64)
DEBUG    17:27:42     output: tensor([221.9347], dtype=torch.float64)
INFO     17:27:42     [!] Result: sat
INFO     17:27:42     [!] Runtime: 0.2130
sat,0.2130
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:41.882880616 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883049811 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883076378 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883094249 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883116618 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883140756 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883175878 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883200436 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883220456 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883237348 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883253799 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.883270571 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888259236 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888339196 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888365972 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888385732 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888405672 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888424523 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888443683 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888462284 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888481345 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888500005 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888518866 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:41.888540925 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/monotonicity_CI_shift20_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:44     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:44     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:44     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:45     [Failed] RandomAttack(seed=329, device=cpu)
INFO     17:27:45     [Failed] PGDAttack(seed=849, device=cpu)
INFO     17:27:45     [!] eps=0.011349, perturbed=40
DEBUG    17:27:45     Try conv_mode=patches, method=backward, input_split=False
INFO     17:27:45     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:27:45     Initial bounds (fisrt 10): tensor([ 256.4622, -257.2938])
INFO     17:27:45     Remain 0 objectives
INFO     17:27:45     [!] Iterations: 0
INFO     17:27:45     [!] Result: unsat
INFO     17:27:45     [!] Runtime: 0.8945
unsat,0.8945
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:44.946885189 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947063589 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947086818 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947105898 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947125009 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947143440 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947161880 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947180071 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947198692 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947217233 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947235743 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.947260661 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952027039 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952044150 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952048528 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952052326 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952056065 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952059733 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952063431 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952066979 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952070717 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952074485 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952078193 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:44.952081762 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/if_then_5levels_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:48     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:48     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:48     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:48     [Failed] RandomAttack(seed=429, device=cpu)
INFO     17:27:48     [Success] PGDAttack(seed=608, device=cpu)
INFO     17:27:48     [!] Iterations: 0
INFO     17:27:48     adv (first 5): tensor([-0.2651, -0.1609,  0.8706,  2.3366, -1.0532], dtype=torch.float64)
DEBUG    17:27:48     output: tensor([25.2785], dtype=torch.float64)
INFO     17:27:48     [!] Result: sat
INFO     17:27:48     [!] Runtime: 0.2379
sat,0.2379
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:48.631365510 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631454466 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631461073 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631464701 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631468479 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631472097 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631475765 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631479254 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631482962 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631486840 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631492197 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.631495915 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.637904048 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638022139 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638044188 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638063518 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638082419 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638101439 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638120840 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638139620 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638158731 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638177631 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638196212 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:48.638214493 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/if_then_7levels_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:51     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:51     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:51     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:51     [Failed] RandomAttack(seed=672, device=cpu)
INFO     17:27:51     [Success] PGDAttack(seed=18, device=cpu)
INFO     17:27:51     [!] Iterations: 0
INFO     17:27:51     adv (first 5): tensor([ 6.7604e-04,  2.8812e-01,  5.8856e-01,  8.8009e-01, -1.0114e+00],
       dtype=torch.float64)
DEBUG    17:27:51     output: tensor([1.0848], dtype=torch.float64)
INFO     17:27:51     [!] Result: sat
INFO     17:27:51     [!] Runtime: 0.2051
sat,0.2051
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:51.630730021 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630815828 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630841705 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630859167 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630875908 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630892260 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630908482 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630924594 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630941326 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630957747 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630974099 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.630990451 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638077221 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638109085 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638114192 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638118770 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638123368 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638127986 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638132573 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638137011 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638141429 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638146087 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638152423 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:51.638156741 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_small_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/if_then_9levels_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(5, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(10, 5, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(5, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:54     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:54     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:54     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:54     [Failed] RandomAttack(seed=165, device=cpu)
INFO     17:27:54     [Success] PGDAttack(seed=17, device=cpu)
INFO     17:27:54     [!] Iterations: 0
INFO     17:27:54     adv (first 5): tensor([ 0.6886,  1.7439,  2.6636, -0.4150, -1.2151], dtype=torch.float64)
DEBUG    17:27:54     output: tensor([0.4155], dtype=torch.float64)
INFO     17:27:54     [!] Result: sat
INFO     17:27:54     [!] Runtime: 0.2229
sat,0.2229
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:54.737589793 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737685115 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737706644 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737725675 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737744565 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737762986 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737781307 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737799578 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737818469 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737836909 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737855220 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.737873571 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759477928 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759502156 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759507604 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759511352 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759515130 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759518788 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759614205 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759622421 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759626619 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759630527 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759634555 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:54.759638183 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta5_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:27:57     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:27:57     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:27:57     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:27:57     [Failed] RandomAttack(seed=653, device=cpu)
INFO     17:27:58     [Success] PGDAttack(seed=757, device=cpu)
INFO     17:27:58     [!] Iterations: 0
INFO     17:27:58     adv (first 5): tensor([-0.4077, -0.4164,  3.1419, -0.3912, -0.1966], dtype=torch.float64)
DEBUG    17:27:58     output: tensor([5.3295], dtype=torch.float64)
INFO     17:27:58     [!] Result: sat
INFO     17:27:58     [!] Runtime: 0.2196
sat,0.2196
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:27:57.798292127 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798442502 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798470718 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798491008 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798508229 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798524621 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798540923 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798557385 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798574626 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798591268 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798607400 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.798624261 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804735015 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804760572 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804765699 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804770307 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804775055 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804779512 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804784060 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804788508 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804793116 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804797643 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804803860 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:27:57.804808198 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta10_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:00     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:00     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:00     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:00     [Failed] RandomAttack(seed=311, device=cpu)
INFO     17:28:01     [Success] PGDAttack(seed=840, device=cpu)
INFO     17:28:01     [!] Iterations: 0
INFO     17:28:01     adv (first 5): tensor([-0.4373,  0.2372, -0.5238, -0.4292,  0.4380], dtype=torch.float64)
DEBUG    17:28:01     output: tensor([501.8589], dtype=torch.float64)
INFO     17:28:01     [!] Result: sat
INFO     17:28:01     [!] Runtime: 0.2225
sat,0.2225
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:00.824077871 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824170335 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824192733 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824210205 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824226956 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824243538 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824260390 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824276741 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824293613 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824310724 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824327046 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.824343468 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829421888 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829567925 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829589594 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829609005 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829630114 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829659030 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829678420 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829697461 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829716911 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829735561 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829754602 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:00.829773343 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta20_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:03     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:03     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:03     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:03     [Failed] RandomAttack(seed=9, device=cpu)
INFO     17:28:04     [Failed] PGDAttack(seed=474, device=cpu)
INFO     17:28:04     [!] eps=0.289968, perturbed=4
DEBUG    17:28:04     Try conv_mode=patches, method=backward, input_split=False
INFO     17:28:04     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:28:04     Initial bounds (fisrt 10): tensor([ 562.4095, -563.0819])
INFO     17:28:04     Remain 0 objectives
INFO     17:28:04     [!] Iterations: 0
INFO     17:28:04     [!] Result: unsat
INFO     17:28:04     [!] Runtime: 1.1521
unsat,1.1521
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:03.798991521 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799104094 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799125484 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799144454 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799163984 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799182345 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799201006 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799219547 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799238567 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799258027 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799276658 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.799294929 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804280232 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804390567 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804419433 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804444250 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804469278 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804490477 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804511457 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804531706 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804548358 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804564760 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804581142 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:03.804597334 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta40_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:07     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:07     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:07     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:07     [Failed] RandomAttack(seed=625, device=cpu)
INFO     17:28:08     [Failed] PGDAttack(seed=418, device=cpu)
INFO     17:28:08     [!] eps=0.798700, perturbed=4
INFO     17:28:08     Params of 1-th run: {'input_split': True, 'abstract_method': 'forward+backward', 'decision_method': 'smart', 'decision_topk': 1}
DEBUG    17:28:08     Try conv_mode=patches, method=forward+backward, input_split=True
INFO     17:28:08     Initialized abstractor: mode="patches", method="forward+backward", input_split=True, backward_batch_size=inf
INFO     17:28:08     Try batch size 1000
INFO     17:28:08     Initial bounds (fisrt 10): tensor([ 592.9432, -593.3394])
INFO     17:28:08     Verified: 2 	 Remain: 0
INFO     17:28:08     [!] Iterations: 0
INFO     17:28:08     [!] Result: unsat
INFO     17:28:08     [!] Runtime: 1.1647
unsat,1.1647
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:07.685873571 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.685959108 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.685978558 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.685995300 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.686012141 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.686028863 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.686045345 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.686061527 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.686078188 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.686094780 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.686111582 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.686127993 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690888045 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690934992 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690941169 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690946326 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690951144 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690955902 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690960689 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690965227 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690970034 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690974652 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690981359 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:07.690985917 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta5_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:11     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:11     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:11     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:11     [Failed] RandomAttack(seed=392, device=cpu)
INFO     17:28:12     [Failed] PGDAttack(seed=630, device=cpu)
INFO     17:28:12     [!] eps=0.326258, perturbed=8
DEBUG    17:28:12     Try conv_mode=patches, method=backward, input_split=False
INFO     17:28:12     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:28:12     Initial bounds (fisrt 10): tensor([ 135.2045, -135.4341])
INFO     17:28:12     Remain 0 objectives
INFO     17:28:12     [!] Iterations: 0
INFO     17:28:12     [!] Result: unsat
INFO     17:28:12     [!] Runtime: 1.2807
unsat,1.2807
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:11.632795968 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.632894748 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.632915388 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.632932569 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.632949851 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.632971410 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.632993839 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.633016028 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.633039146 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.633057057 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.633073559 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.633090101 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.637989482 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654073465 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654191466 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654216423 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654239851 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654263509 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654285988 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654307338 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654330716 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654352825 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654374694 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:11.654396943 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta10_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:15     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:15     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:15     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:15     [Failed] RandomAttack(seed=313, device=cpu)
INFO     17:28:16     [Failed] PGDAttack(seed=578, device=cpu)
INFO     17:28:16     [!] eps=0.126935, perturbed=8
DEBUG    17:28:16     Try conv_mode=patches, method=backward, input_split=False
INFO     17:28:16     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:28:16     Initial bounds (fisrt 10): tensor([ 69.4515, -70.1005])
INFO     17:28:16     Remain 0 objectives
INFO     17:28:16     [!] Iterations: 0
INFO     17:28:16     [!] Result: unsat
INFO     17:28:16     [!] Runtime: 1.1467
unsat,1.1467
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:15.709730760 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.709822644 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.709843024 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.709860205 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.709877647 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.709894378 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.709955967 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.709988111 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.710012599 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.710037647 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.710060735 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.710078586 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715144493 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715182923 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715190110 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715195547 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715200505 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715205202 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715210260 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715215037 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715219995 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715225192 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715230470 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:15.715235457 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta20_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:19     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:19     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:19     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:19     [Failed] RandomAttack(seed=944, device=cpu)
INFO     17:28:19     [Success] PGDAttack(seed=12, device=cpu)
INFO     17:28:19     [!] Iterations: 0
INFO     17:28:19     adv (first 5): tensor([-0.4373,  0.1626, -0.5245, -0.4295,  0.3494], dtype=torch.float64)
DEBUG    17:28:19     output: tensor([515.0944], dtype=torch.float64)
INFO     17:28:19     [!] Result: sat
INFO     17:28:19     [!] Runtime: 0.2177
sat,0.2177
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:19.642130304 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642210973 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642230793 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642248145 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642265546 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642282458 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642299089 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642315511 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642332353 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642349074 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642365596 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.642382118 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647832074 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647853773 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647858031 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647862059 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647865857 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647870135 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647873773 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647877341 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647880999 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647884587 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647889675 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:19.647893333 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta40_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:22     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:22     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:22     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:22     [Failed] RandomAttack(seed=327, device=cpu)
INFO     17:28:22     [Success] PGDAttack(seed=883, device=cpu)
INFO     17:28:22     [!] Iterations: 0
INFO     17:28:22     adv (first 5): tensor([-0.4148, -0.4166,  1.9009, -0.4145, -0.3855], dtype=torch.float64)
DEBUG    17:28:22     output: tensor([109.1348], dtype=torch.float64)
INFO     17:28:22     [!] Result: sat
INFO     17:28:22     [!] Runtime: 0.2223
sat,0.2223
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:22.627198656 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627300615 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627322354 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627343724 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627365153 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627390121 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627408841 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627426962 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627445773 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627464224 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627482384 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.627500455 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633026317 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633107316 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633131254 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633148685 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633166167 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633182658 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633199120 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633215302 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633231744 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633248406 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633271034 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:22.633287426 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta5_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:25     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:25     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:25     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:25     [Failed] RandomAttack(seed=743, device=cpu)
INFO     17:28:26     [Failed] PGDAttack(seed=716, device=cpu)
INFO     17:28:26     [!] eps=0.043334, perturbed=16
DEBUG    17:28:26     Try conv_mode=patches, method=backward, input_split=False
INFO     17:28:26     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:28:26     Initial bounds (fisrt 10): tensor([ 343.0535, -343.1629])
INFO     17:28:26     Remain 0 objectives
INFO     17:28:26     [!] Iterations: 0
INFO     17:28:26     [!] Result: unsat
INFO     17:28:26     [!] Runtime: 1.1247
unsat,1.1247
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:25.582762698 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.582914662 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.582934093 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.582950794 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.582967746 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.582984338 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.583000769 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.583016811 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.583034243 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.583051754 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.583067866 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.583084478 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588318212 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588352585 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588357702 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588361331 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588365049 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588368727 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588372485 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588376213 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588379961 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588383859 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588389277 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:25.588396153 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta10_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:29     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:29     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:29     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:29     [Failed] RandomAttack(seed=894, device=cpu)
INFO     17:28:30     [Failed] PGDAttack(seed=453, device=cpu)
INFO     17:28:30     [!] eps=0.125949, perturbed=16
DEBUG    17:28:30     Try conv_mode=patches, method=backward, input_split=False
INFO     17:28:30     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:28:30     Initial bounds (fisrt 10): tensor([ 547.1976, -548.6530])
INFO     17:28:30     Remain 0 objectives
INFO     17:28:30     [!] Iterations: 0
INFO     17:28:30     [!] Result: unsat
INFO     17:28:30     [!] Runtime: 1.0993
unsat,1.0993
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:29.507408685 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507498900 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507519740 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507538311 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507556951 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507580330 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507598850 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507616801 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507635282 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507653373 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507671304 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.507689085 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513074242 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513160509 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513181869 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513201109 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513220909 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513239710 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513258690 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513277281 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513296181 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513315042 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513340170 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:29.513359110 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta20_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:33     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:33     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:33     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:33     [Failed] RandomAttack(seed=421, device=cpu)
INFO     17:28:33     [Success] PGDAttack(seed=670, device=cpu)
INFO     17:28:33     [!] Iterations: 0
INFO     17:28:33     adv (first 5): tensor([-0.4119,  3.4103, -0.3865, -0.4194,  2.3795], dtype=torch.float64)
DEBUG    17:28:33     output: tensor([62.1261], dtype=torch.float64)
INFO     17:28:33     [!] Result: sat
INFO     17:28:33     [!] Runtime: 0.2186
sat,0.2186
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:33.356037173 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356122880 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356142210 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356164089 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356181141 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356200381 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356235963 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356259851 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356279142 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356295973 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356312415 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.356328547 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360662199 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360714233 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360733724 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360750615 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360768386 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360785048 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360801730 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360821400 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360845588 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360863139 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360879561 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:33.360895923 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta40_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:36     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:36     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:36     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:36     [Failed] RandomAttack(seed=242, device=cpu)
INFO     17:28:36     [Success] PGDAttack(seed=343, device=cpu)
INFO     17:28:36     [!] Iterations: 0
INFO     17:28:36     adv (first 5): tensor([-0.4135, -0.4163, -0.5602,  3.2492, -0.4150], dtype=torch.float64)
DEBUG    17:28:36     output: tensor([42.4967], dtype=torch.float64)
INFO     17:28:36     [!] Result: sat
INFO     17:28:36     [!] Runtime: 0.2148
sat,0.2148
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:36.324947112 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325056358 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325077767 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325114468 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325133749 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325150111 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325166492 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325182894 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325199686 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325216328 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325232599 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.325248991 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332161915 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332248232 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332267782 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332284934 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332306593 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332319606 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332325104 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332330441 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332334589 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332338467 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332342185 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:36.332345913 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta5_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:39     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:39     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:39     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:39     [Failed] RandomAttack(seed=155, device=cpu)
INFO     17:28:39     [Success] PGDAttack(seed=594, device=cpu)
INFO     17:28:39     [!] Iterations: 0
INFO     17:28:39     adv (first 5): tensor([-0.4243, -0.4163, -0.5422,  0.7721, -0.8086], dtype=torch.float64)
DEBUG    17:28:39     output: tensor([217.8555], dtype=torch.float64)
INFO     17:28:39     [!] Result: sat
INFO     17:28:39     [!] Runtime: 0.2160
sat,0.2160
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:39.337064870 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337148858 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337168778 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337190018 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337207509 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337223851 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337240273 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337256425 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337273116 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337289608 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337306780 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.337339023 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342408188 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342446029 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342452276 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342456934 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342461562 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342466179 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342470957 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342475365 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342480132 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342484760 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342490357 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:39.342494815 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta10_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:42     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:42     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:42     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:42     [Failed] RandomAttack(seed=343, device=cpu)
INFO     17:28:43     [Failed] PGDAttack(seed=192, device=cpu)
INFO     17:28:43     [!] eps=0.307774, perturbed=32
DEBUG    17:28:43     Try conv_mode=patches, method=backward, input_split=False
INFO     17:28:43     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:28:43     Initial bounds (fisrt 10): tensor([ 388.8925, -391.2059])
INFO     17:28:43     Remain 0 objectives
INFO     17:28:43     [!] Iterations: 0
INFO     17:28:43     [!] Result: unsat
INFO     17:28:43     [!] Runtime: 1.1611
unsat,1.1611
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:42.359170157 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359266279 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359291506 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359314155 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359337053 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359360032 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359379702 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359402631 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359422301 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359444440 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359464570 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.359561981 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363932507 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363946940 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363951168 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363954966 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363958674 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363962272 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363965880 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363969458 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363973257 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363976845 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363980463 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:42.363984781 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta20_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:46     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:46     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:46     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:46     [Failed] RandomAttack(seed=809, device=cpu)
INFO     17:28:47     [Failed] PGDAttack(seed=51, device=cpu)
INFO     17:28:47     [!] eps=1.148586, perturbed=32
INFO     17:28:47     Params of 1-th run: {'input_split': True, 'abstract_method': 'forward+backward', 'decision_method': 'smart', 'decision_topk': 1}
DEBUG    17:28:47     Try conv_mode=patches, method=forward+backward, input_split=True
INFO     17:28:47     Initialized abstractor: mode="patches", method="forward+backward", input_split=True, backward_batch_size=inf
INFO     17:28:47     Try batch size 1000
INFO     17:28:47     Initial bounds (fisrt 10): tensor([ 334.8556, -340.6291])
INFO     17:28:47     Verified: 2 	 Remain: 0
INFO     17:28:47     [!] Iterations: 0
INFO     17:28:47     [!] Result: unsat
INFO     17:28:47     [!] Runtime: 1.2362
unsat,1.2362
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:46.250816751 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.250911453 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.250937300 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.250955951 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.250974602 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.250992563 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.251010714 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.251028625 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.251047045 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.251065316 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.251083637 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.251101688 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255623690 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255642320 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255648138 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255653985 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255659282 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255664189 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255669147 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255673725 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255678812 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255683500 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255690616 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:46.255695754 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta40_epsilon10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:50     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:50     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:50     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:50     [Failed] RandomAttack(seed=719, device=cpu)
INFO     17:28:51     [Failed] PGDAttack(seed=283, device=cpu)
INFO     17:28:51     [!] eps=0.767127, perturbed=32
INFO     17:28:51     Params of 1-th run: {'input_split': True, 'abstract_method': 'forward+backward', 'decision_method': 'smart', 'decision_topk': 1}
DEBUG    17:28:51     Try conv_mode=patches, method=forward+backward, input_split=True
INFO     17:28:51     Initialized abstractor: mode="patches", method="forward+backward", input_split=True, backward_batch_size=inf
INFO     17:28:51     Try batch size 1000
INFO     17:28:51     Initial bounds (fisrt 10): tensor([ 316.9934, -325.4389])
INFO     17:28:51     Verified: 2 	 Remain: 0
INFO     17:28:51     [!] Iterations: 0
INFO     17:28:51     [!] Result: unsat
INFO     17:28:51     [!] Runtime: 1.1764
unsat,1.1764
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:50.251793780 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252000896 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252032321 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252057768 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252077048 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252093750 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252110352 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252126743 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252143655 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252163605 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252183235 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.252199927 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.256918027 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257008232 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257037337 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257060856 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257082365 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257103055 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257123844 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257140776 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257163304 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257179926 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257196298 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:50.257212440 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/monotonicity_CI_shift5_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:54     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:54     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:54     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:54     [Failed] RandomAttack(seed=178, device=cpu)
INFO     17:28:55     [Failed] PGDAttack(seed=971, device=cpu)
INFO     17:28:55     [!] eps=0.020840, perturbed=40
DEBUG    17:28:55     Try conv_mode=patches, method=backward, input_split=False
INFO     17:28:55     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:28:55     Initial bounds (fisrt 10): tensor([ 368.2467, -368.7037])
INFO     17:28:55     Remain 0 objectives
INFO     17:28:55     [!] Iterations: 0
INFO     17:28:55     [!] Result: unsat
INFO     17:28:55     [!] Runtime: 1.1043
unsat,1.1043
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:54.247547262 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247642634 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247662714 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247680076 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247697397 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247714179 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247731730 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247753439 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247771630 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247788392 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247808262 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.247825193 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252741846 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252823405 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252860077 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252880417 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252897858 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252914470 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252936819 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252953281 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252969592 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.252985714 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.253002056 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:54.253018088 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/monotonicity_CI_shift10_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:28:58     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:28:58     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:28:58     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:28:58     [Failed] RandomAttack(seed=176, device=cpu)
INFO     17:28:58     [Success] PGDAttack(seed=30, device=cpu)
INFO     17:28:58     [!] Iterations: 0
INFO     17:28:58     adv (first 5): tensor([-0.4248, -0.3856, -0.5424,  0.6244, -0.8136], dtype=torch.float64)
DEBUG    17:28:58     output: tensor([229.7351], dtype=torch.float64)
INFO     17:28:58     [!] Result: sat
INFO     17:28:58     [!] Runtime: 0.2326
sat,0.2326
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:28:58.124355877 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124450339 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124470549 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124487201 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124503683 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124519865 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124536126 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124552228 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124568970 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124585342 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124601624 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.124617796 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145334533 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145355652 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145360860 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145365727 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145370305 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145373883 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145377621 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145381149 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145384808 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145388476 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145393763 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:28:58.145397281 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/monotonicity_CI_shift20_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:01     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:29:01     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:29:01     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:01     [Failed] RandomAttack(seed=720, device=cpu)
INFO     17:29:02     [Failed] PGDAttack(seed=765, device=cpu)
INFO     17:29:02     [!] eps=0.011349, perturbed=40
DEBUG    17:29:02     Try conv_mode=patches, method=backward, input_split=False
INFO     17:29:02     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:29:02     Initial bounds (fisrt 10): tensor([ 250.1234, -250.7236])
INFO     17:29:02     Remain 0 objectives
INFO     17:29:02     [!] Iterations: 0
INFO     17:29:02     [!] Result: unsat
INFO     17:29:02     [!] Runtime: 1.1685
unsat,1.1685
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:01.142057570 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142150454 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142171733 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142190993 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142210294 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142229014 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142247605 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142266166 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142285076 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142304137 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142322528 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.142340749 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147445637 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147510865 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147516962 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147520880 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147524718 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147528526 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147532674 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147536372 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147540410 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147544128 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147547936 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:01.147551754 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/if_then_7levels_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:05     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:29:05     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:29:05     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:05     [Failed] RandomAttack(seed=731, device=cpu)
INFO     17:29:05     [Success] PGDAttack(seed=739, device=cpu)
INFO     17:29:05     [!] Iterations: 0
INFO     17:29:05     adv (first 5): tensor([-0.0061,  0.4214,  0.7009,  0.8264, -1.0208], dtype=torch.float64)
DEBUG    17:29:05     output: tensor([1.6374], dtype=torch.float64)
INFO     17:29:05     [!] Result: sat
INFO     17:29:05     [!] Runtime: 0.2209
sat,0.2209
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:05.104226756 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104318960 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104340459 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104359390 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104378530 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104397041 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104415602 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104434063 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104452963 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104471534 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104490105 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.104508545 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.109579839 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124510008 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124548509 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124556945 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124564291 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124570648 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124579473 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124585940 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124592887 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124599473 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124605390 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:05.124615845 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_20.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/if_then_9levels_w20.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(6, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:08     [!] VNNLIB: 400 inputs, 1 outputs
INFO     17:29:08     [!] Input shape: (1, 1, 20, 20) (is_nhwc=False)
INFO     17:29:08     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:08     [Failed] RandomAttack(seed=20, device=cpu)
INFO     17:29:08     [Success] PGDAttack(seed=927, device=cpu)
INFO     17:29:08     [!] Iterations: 0
INFO     17:29:08     adv (first 5): tensor([ 7.8113e-01,  1.7961e+00,  2.4884e+00, -4.3765e-04, -1.1602e+00],
       dtype=torch.float64)
DEBUG    17:29:08     output: tensor([0.5499], dtype=torch.float64)
INFO     17:29:08     [!] Result: sat
INFO     17:29:08     [!] Runtime: 0.2233
sat,0.2233
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:08.171491920 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171574558 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171594148 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171616107 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171632959 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171649201 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171665273 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171681635 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171698876 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171735908 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171761545 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.171791200 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.176935217 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177028680 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177052728 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177072069 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177091689 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177110359 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177129510 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177148241 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177173608 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177192888 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177211779 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:08.177230459 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta5_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:11     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:11     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:11     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:11     [Failed] RandomAttack(seed=415, device=cpu)
INFO     17:29:13     [Failed] PGDAttack(seed=793, device=cpu)
INFO     17:29:13     [!] eps=0.047398, perturbed=4
DEBUG    17:29:13     Try conv_mode=patches, method=backward, input_split=False
INFO     17:29:13     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:29:13     Initial bounds (fisrt 10): tensor([ 36.5045, -36.5703])
INFO     17:29:13     Remain 0 objectives
INFO     17:29:13     [!] Iterations: 0
INFO     17:29:13     [!] Result: unsat
INFO     17:29:13     [!] Runtime: 2.7378
unsat,2.7378
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:11.198573535 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198600342 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198605459 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198609967 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198614425 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198618752 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198623080 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198627348 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198631736 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198636384 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198642301 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.198646638 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205928358 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205962860 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205968428 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205972286 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205976044 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205979812 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205983790 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205987428 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205991606 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.205995374 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.206001201 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:11.206004849 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta10_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:16     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:16     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:16     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:16     [Failed] RandomAttack(seed=710, device=cpu)
INFO     17:29:17     [Success] PGDAttack(seed=389, device=cpu)
INFO     17:29:17     [!] Iterations: 0
INFO     17:29:17     adv (first 5): tensor([-0.4241,  2.4713, -0.4877, -0.4449, -0.4400], dtype=torch.float64)
DEBUG    17:29:17     output: tensor([75.0841], dtype=torch.float64)
INFO     17:29:17     [!] Result: sat
INFO     17:29:17     [!] Runtime: 0.2398
sat,0.2398
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:16.791302800 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791382920 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791389037 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791393534 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791397992 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791402400 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791406938 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791411266 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791415773 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791421121 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791430296 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.791434754 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801866404 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801911432 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801916839 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801920647 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801924445 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801928134 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801932082 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801935570 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801939438 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801943316 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801949433 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:16.801953131 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta20_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:19     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:19     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:19     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:19     [Failed] RandomAttack(seed=307, device=cpu)
INFO     17:29:22     [Failed] PGDAttack(seed=653, device=cpu)
INFO     17:29:22     [!] eps=0.277525, perturbed=4
DEBUG    17:29:22     Try conv_mode=patches, method=backward, input_split=False
INFO     17:29:22     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:29:22     Initial bounds (fisrt 10): tensor([ 547.0981, -547.9182])
INFO     17:29:22     Remain 0 objectives
INFO     17:29:22     [!] Iterations: 0
INFO     17:29:22     [!] Result: unsat
INFO     17:29:22     [!] Runtime: 2.6907
unsat,2.6907
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:19.846501196 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846525224 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846529712 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846533520 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846537368 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846541026 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846544695 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846548213 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846551961 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846555659 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846560796 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.846564435 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854462678 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854548915 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854568555 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854586186 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854602998 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854619499 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854636461 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854652993 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854669904 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854686316 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854702888 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:19.854718980 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_2perturbations_delta40_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:25     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:25     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:25     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:25     [Failed] RandomAttack(seed=823, device=cpu)
INFO     17:29:25     [Success] PGDAttack(seed=344, device=cpu)
INFO     17:29:25     [!] Iterations: 0
INFO     17:29:25     adv (first 5): tensor([-0.4355, -0.4170, -0.5192,  0.8675,  0.7750], dtype=torch.float64)
DEBUG    17:29:25     output: tensor([153.6456], dtype=torch.float64)
INFO     17:29:25     [!] Result: sat
INFO     17:29:25     [!] Runtime: 0.2579
sat,0.2579
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:25.319292838 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319358536 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319364343 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319368251 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319372349 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319376187 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319380305 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319383883 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319388101 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319391839 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319398715 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.319403563 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.342977806 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343060984 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343080415 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343098046 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343114857 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343131329 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343147751 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343164453 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343186682 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343203543 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343220145 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:25.343236457 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta5_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:28     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:28     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:28     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:28     [Failed] RandomAttack(seed=515, device=cpu)
INFO     17:29:30     [Failed] PGDAttack(seed=168, device=cpu)
INFO     17:29:30     [!] eps=0.222264, perturbed=8
DEBUG    17:29:30     Try conv_mode=patches, method=backward, input_split=False
INFO     17:29:31     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:29:31     Initial bounds (fisrt 10): tensor([ 107.0503, -107.6808])
INFO     17:29:31     Remain 0 objectives
INFO     17:29:31     [!] Iterations: 0
INFO     17:29:31     [!] Result: unsat
INFO     17:29:31     [!] Runtime: 2.7322
unsat,2.7322
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:28.372956175 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.372979564 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.372983941 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.372987679 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.372991268 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.372994826 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.372998434 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.373002022 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.373005640 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.373009539 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.373014656 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.373018184 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381208930 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381248390 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381254257 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381258805 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381263592 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381268040 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381272558 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381277185 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381281753 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381286361 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381293038 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:28.381297715 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta10_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:33     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:33     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:33     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:34     [Failed] RandomAttack(seed=977, device=cpu)
INFO     17:29:36     [Failed] PGDAttack(seed=645, device=cpu)
INFO     17:29:36     [!] eps=0.156621, perturbed=8
DEBUG    17:29:36     Try conv_mode=patches, method=backward, input_split=False
INFO     17:29:36     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:29:36     Initial bounds (fisrt 10): tensor([ 280.9891, -281.8864])
INFO     17:29:36     Remain 0 objectives
INFO     17:29:36     [!] Iterations: 0
INFO     17:29:36     [!] Result: unsat
INFO     17:29:36     [!] Runtime: 2.7451
unsat,2.7451
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:33.927663452 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927749879 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927755416 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927759644 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927763572 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927767230 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927771108 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927774797 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927778735 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927782513 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927788080 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.927793127 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934540209 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934611523 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934631254 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934648535 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934665556 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934682458 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934699389 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934715821 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934737720 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934754752 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934771224 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:33.934787535 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta20_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:39     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:39     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:39     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:39     [Failed] RandomAttack(seed=400, device=cpu)
INFO     17:29:42     [Failed] PGDAttack(seed=315, device=cpu)
INFO     17:29:42     [!] eps=0.209699, perturbed=8
DEBUG    17:29:42     Try conv_mode=patches, method=backward, input_split=False
INFO     17:29:42     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:29:42     Initial bounds (fisrt 10): tensor([ 230.8347, -231.2668])
INFO     17:29:42     Remain 0 objectives
INFO     17:29:42     [!] Iterations: 0
INFO     17:29:42     [!] Result: unsat
INFO     17:29:42     [!] Runtime: 2.7140
unsat,2.7140
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:39.472482145 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472514549 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472520256 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472525154 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472529821 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472534299 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472538907 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472543484 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472548602 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472553849 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472560906 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.472565593 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480503905 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480662346 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480686854 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480708373 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480728983 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480749033 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480769672 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480790582 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480815409 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480835259 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480855439 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:39.480875479 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_4perturbations_delta40_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:45     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:45     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:45     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:45     [Failed] RandomAttack(seed=9, device=cpu)
INFO     17:29:45     [Success] PGDAttack(seed=474, device=cpu)
INFO     17:29:45     [!] Iterations: 0
INFO     17:29:45     adv (first 5): tensor([-0.4356, -0.4170, -0.5213,  0.4682,  0.6097], dtype=torch.float64)
DEBUG    17:29:45     output: tensor([177.8568], dtype=torch.float64)
INFO     17:29:45     [!] Result: sat
INFO     17:29:45     [!] Runtime: 0.2623
sat,0.2623
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:44.978208057 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978236701 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978241184 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978244926 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978248717 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978252489 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978256231 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978259783 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978263465 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978267567 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978272719 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:44.978276251 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002240178 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002331543 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002351123 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002368392 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002385050 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002401338 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002419127 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002441438 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002458647 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002475015 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002491674 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:45.002507932 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta5_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:48     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:48     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:48     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:48     [Failed] RandomAttack(seed=682, device=cpu)
INFO     17:29:48     [Success] PGDAttack(seed=541, device=cpu)
INFO     17:29:48     [!] Iterations: 0
INFO     17:29:48     adv (first 5): tensor([-0.4247,  2.2803, -0.4874, -0.4464, -0.4645], dtype=torch.float64)
DEBUG    17:29:48     output: tensor([97.7530], dtype=torch.float64)
INFO     17:29:48     [!] Result: sat
INFO     17:29:48     [!] Runtime: 0.2428
sat,0.2428
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:48.035350807 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035405824 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035412218 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035416830 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035421442 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035425975 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035430677 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035435119 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035439741 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035444644 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035451027 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.035455479 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042884150 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042946721 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042953315 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042958337 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042963570 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042968712 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042974485 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042979067 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042984860 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042990023 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.042998357 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:48.043002309 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta10_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:51     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:51     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:51     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:51     [Failed] RandomAttack(seed=899, device=cpu)
INFO     17:29:53     [Failed] PGDAttack(seed=830, device=cpu)
INFO     17:29:53     [!] eps=0.461347, perturbed=16
DEBUG    17:29:53     Try conv_mode=patches, method=backward, input_split=False
INFO     17:29:53     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:29:53     Initial bounds (fisrt 10): tensor([ 456.2263, -457.2119])
INFO     17:29:53     Remain 0 objectives
INFO     17:29:53     [!] Iterations: 0
INFO     17:29:53     [!] Result: unsat
INFO     17:29:53     [!] Runtime: 2.7283
unsat,2.7283
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:51.059937996 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.059987492 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.059993729 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.059998186 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.060002724 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.060007172 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.060011680 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.060016057 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.060020665 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.060025433 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.060031909 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.060036337 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066394325 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066475304 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066495114 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066512236 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066528847 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066545489 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066565639 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066583040 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066605019 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066621931 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066638433 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:51.066654685 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta20_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:29:56     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:29:56     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:29:56     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:29:56     [Failed] RandomAttack(seed=951, device=cpu)
INFO     17:29:59     [Failed] PGDAttack(seed=771, device=cpu)
INFO     17:29:59     [!] eps=0.336221, perturbed=16
DEBUG    17:29:59     Try conv_mode=patches, method=backward, input_split=False
INFO     17:29:59     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:29:59     Initial bounds (fisrt 10): tensor([ 398.8329, -401.3484])
INFO     17:29:59     Remain 0 objectives
INFO     17:29:59     [!] Iterations: 0
INFO     17:29:59     [!] Result: unsat
INFO     17:29:59     [!] Runtime: 2.7134
unsat,2.7134
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:29:56.570176573 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570200741 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570205119 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570208937 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570212705 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570216413 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570220111 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570223639 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570227338 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570231276 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570236543 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.570240091 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579749531 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579777257 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579782105 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579785913 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579789921 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579793549 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579797667 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579801145 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579814618 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579821275 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579827312 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:29:56.579830900 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_8perturbations_delta40_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:30:02     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:30:02     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:30:02     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:30:02     [Failed] RandomAttack(seed=871, device=cpu)
INFO     17:30:02     [Success] PGDAttack(seed=356, device=cpu)
INFO     17:30:02     [!] Iterations: 0
INFO     17:30:02     adv (first 5): tensor([ 1.6032, -0.4170, -0.5563, -0.4765, -0.8236], dtype=torch.float64)
DEBUG    17:30:02     output: tensor([137.2864], dtype=torch.float64)
INFO     17:30:02     [!] Result: sat
INFO     17:30:02     [!] Runtime: 0.2512
sat,0.2512
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:30:02.047634447 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047717065 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047723462 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047727930 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047732598 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047737155 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047741993 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047746351 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047751068 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047755726 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047762413 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.047766870 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056515828 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056563734 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056571570 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056577218 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056583085 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056588652 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056594599 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056599436 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056605573 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056611251 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056616968 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:02.056622355 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta5_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:30:05     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:30:05     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:30:05     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:30:05     [Failed] RandomAttack(seed=28, device=cpu)
INFO     17:30:07     [Failed] PGDAttack(seed=115, device=cpu)
INFO     17:30:07     [!] eps=0.090534, perturbed=32
DEBUG    17:30:07     Try conv_mode=patches, method=backward, input_split=False
INFO     17:30:07     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:30:07     Initial bounds (fisrt 10): tensor([ 204.5559, -205.1925])
INFO     17:30:07     Remain 0 objectives
INFO     17:30:07     [!] Iterations: 0
INFO     17:30:07     [!] Result: unsat
INFO     17:30:07     [!] Runtime: 2.6573
unsat,2.6573
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:30:05.126573452 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126599519 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126604037 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126607825 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126611723 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126615611 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126619319 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126622938 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126626586 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126630264 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126635541 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.126639100 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140233829 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140342155 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140362045 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140379516 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140396158 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140412679 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140429001 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140445703 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140462235 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140478646 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140495408 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:05.140511650 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta10_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:30:10     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:30:10     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:30:10     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:30:10     [Failed] RandomAttack(seed=761, device=cpu)
INFO     17:30:13     [Failed] PGDAttack(seed=230, device=cpu)
INFO     17:30:13     [!] eps=0.091736, perturbed=32
DEBUG    17:30:13     Try conv_mode=patches, method=backward, input_split=False
INFO     17:30:13     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:30:13     Initial bounds (fisrt 10): tensor([ 415.2564, -416.1902])
INFO     17:30:13     Remain 0 objectives
INFO     17:30:13     [!] Iterations: 0
INFO     17:30:13     [!] Result: unsat
INFO     17:30:13     [!] Runtime: 2.7091
unsat,2.7091
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:30:10.519190745 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.535744077 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.535863338 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.535883368 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.535902059 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.535919910 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.535938520 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.535955672 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.535974522 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.535992393 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.536009625 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.536026726 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.543951281 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544049592 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544069032 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544086044 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544103685 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544120597 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544143385 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544160127 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544176659 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544193200 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544209432 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:10.544225864 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta20_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:30:15     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:30:15     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:30:15     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:30:16     [Failed] RandomAttack(seed=365, device=cpu)
INFO     17:30:16     [Success] PGDAttack(seed=692, device=cpu)
INFO     17:30:16     [!] Iterations: 0
INFO     17:30:16     adv (first 5): tensor([-0.4328, -0.4169, -0.4972,  3.1990,  1.9555], dtype=torch.float64)
DEBUG    17:30:16     output: tensor([7.9470], dtype=torch.float64)
INFO     17:30:16     [!] Result: sat
INFO     17:30:16     [!] Runtime: 0.2559
sat,0.2559
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:30:15.951001668 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.966896450 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.966999869 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.967020189 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.967038999 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.967057170 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.967075241 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.967092123 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.967110623 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.967128354 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.967146176 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.967163087 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975455433 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975567977 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975589816 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975609036 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975629576 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975648326 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975666727 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975685318 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975704298 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975723199 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975742189 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:15.975761200 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/robustness_16perturbations_delta40_epsilon10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:30:19     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:30:19     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:30:19     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:30:19     [Failed] RandomAttack(seed=501, device=cpu)
INFO     17:30:19     [Success] PGDAttack(seed=654, device=cpu)
INFO     17:30:19     [!] Iterations: 0
INFO     17:30:19     adv (first 5): tensor([ 1.4187, -0.4167, -0.4955, -0.4010, -0.3089], dtype=torch.float64)
DEBUG    17:30:19     output: tensor([225.7192], dtype=torch.float64)
INFO     17:30:19     [!] Result: sat
INFO     17:30:19     [!] Runtime: 0.2394
sat,0.2394
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:30:18.987346585 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987440608 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987461978 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987480588 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987499489 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987517840 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987536610 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987554801 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987573742 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987592133 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987610464 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.987628385 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995011034 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995101089 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995121569 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995138821 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995155672 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995178001 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995194853 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995210835 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995227306 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995243438 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995259840 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:18.995275792 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/monotonicity_CI_shift5_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:30:22     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:30:22     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:30:22     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:30:22     [Failed] RandomAttack(seed=248, device=cpu)
INFO     17:30:24     [Failed] PGDAttack(seed=856, device=cpu)
INFO     17:30:24     [!] eps=0.146138, perturbed=80
DEBUG    17:30:24     Try conv_mode=patches, method=backward, input_split=False
INFO     17:30:24     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:30:24     Initial bounds (fisrt 10): tensor([ 68.2790, -81.9550])
INFO     17:30:24     Remain 0 objectives
INFO     17:30:24     [!] Iterations: 0
INFO     17:30:24     [!] Result: unsat
INFO     17:30:24     [!] Runtime: 2.7144
unsat,2.7144
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:30:22.029883517 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029925077 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029931394 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029935851 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029940409 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029944867 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029949424 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029953792 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029958440 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029963038 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029969594 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.029974032 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049229587 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049321381 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049343420 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049362760 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049381571 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049400601 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049419931 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049438602 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049457643 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049476393 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049495184 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:22.049514194 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/monotonicity_CI_shift10_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:30:27     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:30:27     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:30:27     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:30:27     [Failed] RandomAttack(seed=988, device=cpu)
INFO     17:30:30     [Failed] PGDAttack(seed=975, device=cpu)
INFO     17:30:30     [!] eps=0.281096, perturbed=80
DEBUG    17:30:30     Try conv_mode=patches, method=backward, input_split=False
INFO     17:30:30     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:30:30     Initial bounds (fisrt 10): tensor([ 55.9279, -91.0088])
INFO     17:30:30     Remain 0 objectives
INFO     17:30:30     [!] Iterations: 0
INFO     17:30:30     [!] Result: unsat
INFO     17:30:30     [!] Runtime: 2.7168
unsat,2.7168
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:30:27.518128040 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518152828 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518157276 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518161264 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518165162 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518168700 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518172318 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518175846 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518179475 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518183203 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518188300 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.518191828 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524842715 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524872819 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524878986 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524884174 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524889271 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524893919 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524898517 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524903024 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524907972 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524912490 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524919746 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:27.524927942 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

python3 main.py --net vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/onnx/NN_rul_full_window_40.onnx --spec vnncomp2023_benchmarks/benchmarks/collins_rul_cnn/vnnlib/monotonicity_CI_shift20_w40.vnnlib
Restricted license - for non-production use only - expires 2025-11-24
ConvertModel(
  (Conv_conv_1): Conv2d(1, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_1): ReLU(inplace=True)
  (Conv_conv_2): Conv2d(10, 20, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_2): ReLU(inplace=True)
  (Conv_conv_3): Conv2d(20, 10, kernel_size=(5, 1), stride=(1, 1))
  (Relu_relu_3): ReLU(inplace=True)
  (Conv_conv_4): Conv2d(10, 5, kernel_size=(3, 1), stride=(1, 1))
  (Relu_relu_4): ReLU(inplace=True)
  (Conv_fc_1): Conv2d(5, 100, kernel_size=(26, 20), stride=(1, 1))
  (Relu_relu_5): ReLU(inplace=True)
  (Dropout_dropout): Identity()
  (Conv_fc_2): Conv2d(100, 1, kernel_size=(1, 1), stride=(1, 1))
  (Flatten_fc_2_Flatten): Flatten()
)
INFO     17:30:33     [!] VNNLIB: 800 inputs, 1 outputs
INFO     17:30:33     [!] Input shape: (1, 1, 40, 20) (is_nhwc=False)
INFO     17:30:33     [!] Output shape: (1, 1)

[!] Current settings:
	- max_hidden_branches           : 5000
	- max_hidden_visited_branches   : 20000
	- use_attack                    : True
	- use_restart                   : True
	- use_stabilize                 : True


INFO     17:30:33     [Failed] RandomAttack(seed=270, device=cpu)
INFO     17:30:35     [Failed] PGDAttack(seed=867, device=cpu)
INFO     17:30:35     [!] eps=0.244614, perturbed=80
DEBUG    17:30:35     Try conv_mode=patches, method=backward, input_split=False
INFO     17:30:35     Initialized abstractor: mode="patches", method="backward", input_split=False, backward_batch_size=inf
INFO     17:30:35     Initial bounds (fisrt 10): tensor([ 203.9305, -228.6405])
INFO     17:30:35     Remain 0 objectives
INFO     17:30:35     [!] Iterations: 0
INFO     17:30:35     [!] Result: unsat
INFO     17:30:35     [!] Runtime: 2.7174
unsat,2.7174
/root/miniconda3/envs/neuralsat/lib/python3.10/site-packages/torch/utils/cpp_extension.py:28: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
  from pkg_resources import packaging  # type: ignore[attr-defined]
2024-02-06 17:30:32.980503329 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980548677 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980553924 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980557562 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980561200 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980564839 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980568507 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980572055 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980575913 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980579861 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980585129 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.980588687 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987276175 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987351407 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987371117 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987388249 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987406380 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987428279 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_3_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987447139 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987466580 [W:onnxruntime:, graph.cc:1283 Graph] Initializer conv_4_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987485860 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987502022 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_1_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987518224 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_W appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
2024-02-06 17:30:32.987534346 [W:onnxruntime:, graph.cc:1283 Graph] Initializer fc_2_B appears in graph inputs and will not be treated as constant value/weight. This may prevent some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.
[W NNPACK.cpp:64] Could not initialize NNPACK! Reason: Unsupported hardware.

